{"checkout.scss":"/*! Theme: Fortune v1.16.8 */\n// This style sheet only affects the checkout page, and as its not coded by\n// PXU it does not follow our normal markup rules\n/* scss-combine:../../node_modules/bc-baseline/lib/mixins */\n@mixin media($max: false, $min: false) {\n  @if $max {\n    @if $min {\n      @media screen and (max-width: $max - 1) and (min-width: $min) { @content; }\n    } @else {\n      @media screen and (max-width: $max - 1) { @content; }\n    }\n  } @else {\n    @media screen and (min-width: $min) { @content; }\n  }\n}\n\n@mixin hover($color, $property: color) {\n  @if lightness($color) > 10% {\n    #{$property}: darken($color,8%);\n  } @else {\n    #{$property}: lighten($color,10%);\n  }\n}\n\n@mixin button-hover($color, $property: color) {\n  @if lightness($color) > 20% {\n    #{$property}: darken($color,5%);\n  } @else {\n    #{$property}: lighten($color,6%);\n  }\n}\n\n@mixin retina {\n  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {\n    @content;\n  }\n}\n\n\n/* scss-combine:general/user-settings */\n$color-primary-dark: stencilColor('color-primary-dark');\n$color-primary-light: stencilColor('color-primary-light');\n\n$body-background-color: stencilColor('body-background-color');\n$body-color: stencilColor('body-font-color');\n$body-font: stencilFontFamily('body-font');\n$body-font-size: 16px;\n\n$heading-font: stencilFontFamily('heading-font');\n$heading-weight: stencilFontWeight('heading-font');\n$heading-color: stencilColor('heading-font-color');\n\n$store-title-font: stencilFontFamily('store-title-font');\n$store-title-weight: stencilFontWeight('store-title-font');\n$store-title-color: stencilColor('store-title-font-color');\n\n$meta-font: stencilFontFamily('meta-font');\n$meta-weight: stencilFontWeight('meta-font');\n$meta-color: stencilColor('meta-font-color');\n\n$button-font: stencilFontFamily('button-font');\n$button-weight: stencilFontWeight('button-font');\n\n$button-font-color: stencilColor('button-font-color');\n$button-background-color: stencilColor('button-background-color');\n$button-border-color: stencilColor('button-border-color');\n\n$button-secondary-font-color: stencilColor('button-secondary-font-color');\n$button-secondary-background-color: stencilColor('button-secondary-background-color');\n$button-secondary-border-color: stencilColor('button-secondary-border-color');\n\n$product-item-title-color: stencilColor('product-item-title-color');\n$product-item-title-font-family: stencilFontFamily('product-item-title');\n$product-item-title-font-weight: stencilFontWeight('product-item-title');\n$product-item-actions-color: stencilColor('product-item-actions-color');\n$product-item-actions-background-color: stencilColor('product-item-actions-background-color');\n\n$section-title-color: stencilColor('section-title-color');\n$section-title-align: stencilString('section-title-alignment');\n\n$accent-color: stencilColor('accent-color');\n$general-link-color: stencilColor('general-link-color');\n$border-color: stencilColor('border-color');\n\n$error-color: stencilColor('color-error');\n$success-color: stencilColor('color-success');\n$neutral-color: stencilColor('color-neutral');\n\n$main-nav-background-color: stencilColor('main-nav-background-color');\n$main-nav-color: stencilColor('main-nav-color');\n\n$enable-main-nav-background-color: stencilString('enable-main-nav-background-color');\n$always-show-main-nav-background-color: stencilString('always-show-main-nav-background-color');\n\n$footer-nav-background-color: stencilColor('footer-nav-background');\n$footer-nav-font-color: stencilColor('footer-nav-font-color');\n\n$carousel-font-color: stencilColor('carousel-font-color');\n$carousel-height-mobile: stencilNumber('carousel-height-mobile');\n$carousel-height-desktop: stencilNumber('carousel-height-desktop');\n$carousel-background-color: stencilColor('carousel-background-color');\n$carousel-dot-color: stencilColor('carousel-dot-color');\n$carousel-image-crop: stencilString('crop-carousel-images');\n\n$banner-background-color: stencilColor('banner-background');\n$banner-font: stencilFontFamily('banner-font');\n$banner-font-color: stencilColor('banner-font-color');\n\n$product-item-align: stencilString('product-item-inside-alignment');\n\n$apple-pay-style: stencilString('apple-pay-style');\n\n\n// Helpers\n/* scss-combine:general/functions */\n// Calculate whether to use a light or dark color based on best contrast\n// Found on Codepen: http://codepen.io/bluesaunders/pen/FCLaz/\n\n// Calculate brightness of a given color.\n@function brightness($color) {\n  @return ((red($color) * 0.299) + (green($color) * 0.587) + (blue($color) * 0.114)) / 255 * 100%;\n}\n\n// Compares contrast of a given color to the light/dark arguments and returns whichever is most \"contrasty\"\n@function color-contrast($color, $dark: $color-primary-dark, $light: $color-primary-light) {\n  @if $color == null {\n    @return null;\n  } @else {\n    $color-brightness: brightness($color);\n    $light-text-brightness: brightness($light);\n    $dark-text-brightness: brightness($dark);\n    @return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);\n  }\n}\n\n@function modal-background($color) {\n  @if lightness($color) > 10% {\n    @return desaturate(darken($color, 15%), 15%);\n  } @else {\n    @return desaturate(lighten($color, 15%), 15%);\n  }\n}\n\n@function lightness-adjust($color-a, $color-b, $other) {\n  $lightness: abs(lightness($color-a) - lightness($color-b));\n  @return if($lightness > 30, $color-a, $other);\n}\n\n@function brightness-adjust($color, $force: false, $amount: 30%, $threshold: 30%) {\n  @if ($force) {\n    @if ($force == lighten) {\n      @return brightness-adjust(lighten($color, $amount));\n    } @else {\n      @return brightness-adjust(darken($color, $amount));\n    }\n  } @else {\n    @if lightness($color) > $threshold {\n      @return darken($color, $amount - 10%);\n    } @else {\n      @return lighten($color, $amount);\n    }\n  }\n}\n\n@function lower-bound($range) {\n  @if length($range) <= 0 {\n    @return 0;\n  }\n  @return nth($range, 1);\n}\n\n@function upper-bound($range) {\n  @if length($range) < 2 {\n    @return 999999999999;\n  }\n  @return nth($range, 2);\n}\n\n\n// ================================================================ */\n//  Function to create an optimized svg url\n// from: http://codepen.io/jakob-e/pen/doMoML\n\n@function svg-url($svg) {\n  //\n  //  Chunk up string in order to avoid\n  //  \"stack level too deep\" error\n  //\n  $encoded: \"\";\n  $slice: 2000;\n  $index: 0;\n  $loops: ceil(str-length($svg) / $slice);\n  @for $i from 1 through $loops {\n    $chunk: str-slice($svg, $index, $index + $slice - 1);\n    //\n    //   Encode (may need a few extra replacements)\n    //\n    $chunk: str-replace($chunk, '\"', '\\'');\n    $chunk: str-replace($chunk, '<', '%3C');\n    $chunk: str-replace($chunk, '>', '%3E');\n    $chunk: str-replace($chunk, '&', '%26');\n    $chunk: str-replace($chunk, '#', '%23');\n    $encoded: #{$encoded}#{$chunk};\n    $index: $index + $slice;\n  }\n\n  @return url(\"data:image/svg+xml;charset=utf8,#{$encoded}\");\n}\n\n//  Helper function to replace characters in a string\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace +\n            str-replace(str-slice($string, $index +\n            str-length($search)), $search, $replace);\n  }\n  @return $string;\n}\n\n/* scss-combine:general/mixins */\n@mixin breakpoint($breakpoint, $print: false) {\n  @if $breakpoint == s-up {\n    @media #{$small-up}{ @content; }\n  }\n  @if $breakpoint == s-only {\n    @media #{$small-only}{ @content; }\n  }\n  @if $breakpoint == m-up {\n    @media #{$medium-up}{ @content; }\n  }\n  @if $breakpoint == m-only {\n    @media #{$medium-only}{ @content; }\n  }\n  @if $breakpoint == m-down {\n    @media #{$medium-down}{ @content; }\n  }\n  @if $breakpoint == l-up {\n    @media #{$large-up}{ @content; }\n  }\n  @if $breakpoint == l-only {\n    @media #{$large-only}{ @content; }\n  }\n  @if $breakpoint == l-down {\n    @media #{$large-down}{ @content; }\n  }\n  @if $breakpoint == xl-up {\n    @media #{$xlarge-up}{ @content; }\n  }\n  @if $breakpoint == xl-only {\n    @media #{$xlarge-only}{ @content; }\n  }\n\n  @if $print or $breakpoint == print {\n    @media print { @content; }\n  }\n}\n\n// Fluid column / element widths\n\n@mixin row($context, $local-gutter: $gutter) {\n  margin-left: $local-gutter / ($context + $local-gutter) / 2 * -100%;\n  margin-right: $local-gutter / ($context + $local-gutter) / 2 * -100%;\n}\n\n@mixin fluid-width($width, $context, $local-gutter: $gutter) {\n  width: $width / ($context + $local-gutter) * 100%;\n  margin-left: $local-gutter / ($context + $local-gutter) / 2 * 100%;\n  margin-right: $local-gutter / ($context + $local-gutter) / 2 * 100%;\n}\n\n// Column Helper\n// Use around a group of child DIVs that use @grin-columns:\n// - To make sure the that the floats clear\n// - Use 'collapse' to offset the internal padding\n//\n@mixin grid-row($behavior: nest, $internal-gutter: $column-gutter) {\n  // scss-lint:disable all\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n  @include clearfix;\n\n  @if $behavior == nest {\n    margin-#{$direction}: -($internal-gutter);\n    margin-#{$opposite-direction}: -($internal-gutter);\n  } @else if $behavior == collapse {\n    width: 100%;\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  min-width: 100%;\n}\n\n// Column Helper\n// Similar to Bourbon Neat's grid structure, allows for multiple rows\n@mixin grid-columns($span: $columns of $container-columns, $display: block) {\n  // scss-lint:disable all\n  $columns: nth($span, 1);\n  $container-columns: container-span($span);\n  $parent-columns: get-parent-columns($container-columns) !global;\n  $single-span: (1/$parent-columns);\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n  $display-table: is-display-table($container-display-table, $display);\n  $width: percentage($columns * $single-span);\n\n  @if $display-table {\n    display: table-cell;\n    width: $width;\n  } @else {\n    float: #{$opposite-direction};\n    box-sizing: border-box;\n\n    @if $display != no-display {\n      display: block;\n    }\n\n    @if $display == collapse or $display == block-collapse or $display == row {\n      width: $width;\n    } @else {\n      width: $width;\n      padding-right: $column-gutter;\n      padding-left: $column-gutter;\n      &:nth-of-type(#{(($container-columns/$columns))}n + 1) {\n        clear: $opposite-direction;\n      }\n    }\n\n    @if $display == row {\n      padding-right: $column-gutter;\n\n      &:last-child {\n        padding-right: 0;\n      }\n    }\n  }\n}\n\n// Border Radius\n@mixin border-radius($radius) {\n  border-radius: $radius;\n  background-clip: padding-box;\n}\n\n// Maintain Aspect Ratio\n// @include maintain-ratio(16 9);\n@mixin maintain-ratio($ratio: 1 1) {\n  @if length($ratio) < 2 or length($ratio) > 2 {\n    @warn \"$ratio must be a list with two values.\";\n  }\n\n  $width: 100%;\n  $height: percentage(nth($ratio, 2) / nth($ratio, 1));\n  width: $width;\n  height: 0;\n  padding-bottom: $height;\n}\n\n// Opacity\n@mixin opacity($opacity) {\n  opacity: $opacity;\n  $opacity-ie: $opacity * 100;\n  filter: alpha(opacity=$opacity-ie); //IE8\n}\n\n// Centerer\n@mixin centerer {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n// Coverer\n@mixin coverer {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n@mixin page-overlay($zindex) {\n  position: fixed;\n  top: 0;\n  right: 0;\n  z-index: $zindex;\n  display: none;\n  width: 100%;\n  height: 100vh;\n  background-color: $modal-background-color;\n  opacity: 0;\n  visibility: hidden;\n  transition: all 0.5s $ease-out-quad;\n\n  &.visible {\n    display: block;\n    opacity: 1;\n    visibility: visible;\n  }\n}\n\n\n// Variables\n/* scss-combine:variables/settings-derivatives */\n// -- Static variables -- //\n$color-white: #fff;\n$color-black: #000;\n\n// -- Backgrounds / Low Hierarchy -- //\n$container-background-color: $body-background-color;\n$container-background-color-opaque: rgba($container-background-color, 0.8);\n$container-background-color-secondary: $color-primary-light;\n$main-nav-background-color-opaque: rgba($main-nav-background-color, 0.8);\n\n// -- Primary Color Derivatives -- //\n$color-primary-dark-dark:  brightness-adjust($color-primary-dark, darken);\n$color-primary-contrast:  brightness-adjust($color-primary-light, lighten);\n\n$body-color-light: brightness-adjust($body-color, lighten, 90%);\n$body-color-dark: brightness-adjust($body-color, darken, 90%);\n$body-color-link: brightness-adjust($body-color, false, 50%);\n\n$secondary-color-main: $color-primary-dark;\n$secondary-color-accent: $color-primary-light;\n\n$modal-background-color: rgba(modal-background($color-primary-dark), 0.9);\n\n//----- Secondary Color Derivatives -----//\n$accent-color-light: brightness-adjust($accent-color, lighten, 70%);\n$accent-color-dark: brightness-adjust($accent-color, darken);\n\n$error-color-border: mix($error-color, $container-background-color, 75%);\n$error-color-placeholder: mix($error-color, $container-background-color);\n\n// -- Main Nav Color Derivatives -- //\n$main-nav-color-dark:  brightness-adjust($main-nav-color, darken);\n$main-nav-color-light:  brightness-adjust($main-nav-color, lighten, 35%);\n$main-nav-color-overlay-contrast:  color-contrast($color-primary-dark, $modal-background-color);\n\n//-- Product Item Actions #derived --//\n$product-item-sale-color: mix(#fff, $error-color, 90%);\n$product-item-sale-background: $error-color;\n\n$product-item-sold-out-background: $button-border-color;\n$product-item-sold-out-color: lightness-adjust($container-background-color, $product-item-sold-out-background, color-contrast($product-item-sold-out-background));\n\n/* scss-combine:variables/layout */\n// -- Grid -- //\n$max-width: 1260px;\n$gutter: 20px;\n$column-gutter: 20px;\n$header-gutter: 35px;\n\n//----- Component Variables -----//\n//-- Page Padding --//\n$page-padding-top: $gutter * 2.5;\n$page-padding-bottom: $gutter * 4;\n\n// -- Main Navigation -- //\n$header-height-mobile: 60px;\n$header-height-desktop: 180px;\n$header-padding: 15px;\n$header-logo-max-width: 250px;\n\n// -- Slideout Navigation -- //\n$slide-navigation-regular: 150px;\n$slide-navigation-desktop: 300px;\n\n// -- Quick Cart -- //\n$quick-cart-image-size: 70px;\n$quick-cart-quantity-button: 35px;\n\n//-- Product Images --//\n$product-image-small: (\n  width: 300px,\n  height: 600px,\n);\n\n$product-image-large: (\n  width: 600px,\n  height: 800px,\n);\n\n//----- Transitions -----//\n$ease-out-quad: cubic-bezier(0.250, 0.460, 0.450, 0.940);\n\n//----- Z-Index Maps -----//\n$zindex: (\n  quick-shop: 5000,\n  write-review: 5000,\n  overlay: 4000,\n  navigation-wrap: 3200,\n  modal-overlay: 3100,\n  modal-wrapper: 3101,\n  compare: 3000,\n  header: 2000,\n  content: 1000,\n  footer: 1000,\n);\n\n//----- Break Points -----//\n$small-range: (0, 568px);\n$medium-range: (569px, 850px);\n$large-range: (851px, 1199px);\n$xlarge-range: (1200px, 1400px);\n$xxlarge-range: (1401px, 99999999em);\n\n$screen: \"only screen\";\n\n$small: upper-bound($small-range);\n$medium: upper-bound($medium-range);\n$large: upper-bound($large-range);\n$xlarge: upper-bound($xlarge-range);\n$xxlarge: upper-bound($xxlarge-range);\n\n$small-up: $screen;\n$small-only: \"#{$screen} and (max-width: #{upper-bound($small-range)})\";\n\n$medium-up: \"#{$screen} and (min-width:#{lower-bound($medium-range)})\";\n$medium-only: \"#{$screen} and (min-width:#{lower-bound($medium-range)}) and (max-width:#{upper-bound($medium-range)})\";\n$medium-down: \"#{$screen} and (max-width:#{upper-bound($medium-range)})\";\n\n$large-up: \"#{$screen} and (min-width:#{lower-bound($large-range)})\";\n$large-only: \"#{$screen} and (min-width:#{lower-bound($large-range)}) and (max-width:#{upper-bound($large-range)})\";\n$large-down: \"#{$screen} and (max-width:#{upper-bound($large-range)})\";\n\n$xlarge-up: \"#{$screen} and (min-width:#{lower-bound($xlarge-range)})\";\n$xlarge-only: \"#{$screen} and (min-width:#{lower-bound($xlarge-range)}) and (max-width:#{upper-bound($xlarge-range)})\";\n$xlarge-down: \"#{$screen} and (max-width:#{upper-bound($xlarge-range)})\";\n\n$xxlarge-up: \"#{$screen} and (min-width:#{lower-bound($xxlarge-range)})\";\n$xxlarge-only: \"#{$screen} and (min-width:#{lower-bound($xxlarge-range)}) and (max-width:#{upper-bound($xxlarge-range)}\";\n\n\n//scss-lint:disable SelectorFormat, IdSelector\n#Header {\n  padding-right: 25px;\n  padding-left: 25px;\n\n  @if ($enable-main-nav-background-color == \"true\") {\n    background-color: $main-nav-background-color;\n  }\n\n  .inner {\n    display: table;\n    height: $header-height-mobile;\n    text-align: left;\n\n    @include breakpoint(l-up) {\n      height: $header-height-desktop;\n    }\n  }\n\n  .header-logo {\n    display: table-cell;\n    width: 100%;\n    height: $header-height-mobile;\n    padding: 0;\n    vertical-align: middle;\n    box-sizing: border-box;\n\n    @include breakpoint(l-up) {\n      height: $header-height-desktop;\n    }\n\n    @include media($max: 769px) {\n      margin-bottom: 0;\n    }\n\n    #LogoImage {\n      height: auto;\n      max-width: $header-logo-max-width;\n      max-height: $header-height-mobile;\n      padding-top: $gutter;\n      padding-bottom: $gutter;\n      margin: 0;\n\n      @include breakpoint(l-up) {\n        max-height: $header-height-desktop;\n      }\n    }\n\n    #LogoContainer h1 {\n      font-family: $store-title-font, \"Open Sans\", Helvetica, Arial, Sans-serif;\n      font-size: 20px;\n      letter-spacing: initial;\n      color: $store-title-color;\n    }\n\n    a,\n    a:hover {\n      color: $main-nav-color;\n    }\n\n    a {\n      display: block;\n      width: auto;\n      text-align: left;\n    }\n\n    img {\n      display: block;\n      max-width: 100%;\n      max-height: 100%;\n      margin: 0 auto; }\n\n    a,\n    img { box-sizing: border-box; }\n  }\n}\n\n.page {\n  .main {\n    padding-top: $gutter;\n  }\n}\n"}
